syntax = "proto3";
package blog;
option go_package = ".;blog";

message Tags {
  int64 id = 1;
  string name = 2;
}

message GetAllTagsRequest {
}

message GetAllTagsResponse {
  repeated Tags tags = 1;
}

message Category {
  int64 id = 1;
  string name = 2;
}

message GetAllCategoryRequest {
}

message GetAllCategoryResponse {
  repeated Category category = 1;
}

message AddTagRequest {
  Tags tag = 1;
}

message AddTagResponse {
  int64 id = 1;
}

message AddCategoryRequest {
  Category category = 1;
}

message AddCategoryResponse {
  int64 id = 1;
}

message DeleteCategoryRequest {
  int64 id = 1;
}

message DeleteCategoryResponse {
}

message DeleteTagRequest {
  int64 id = 1;
}

message DeleteTagResponse {
}

message Blog {
  int64 id = 1;
  string title = 2;
  string content = 3;
  string desc = 4;
  string author = 5;
  repeated Tags tags = 6;
  repeated Category category = 7;
  int64 createAt = 8;
  int64 updateAt = 9;
  string imgUrl = 10;
  string audioFile = 11;
}

message AddBlogRequest {
  Blog blog = 1;
}

message AddBlogResponse {
}

message GetOssTokenRequest {
}

message GetOssTokenResponse {
  string accessId = 1;
  string policy = 2;
  string signature = 3;
  string expire = 4;
  string dir = 5;
  string host = 6;
  string accessKeySecret = 7;
  string securityToken = 8;
  string expiration = 9;
}

message GetBlogsRequest {
  int64 page = 1;
  int64 pageSize = 2;
  string title = 3;
  int64 categoryId = 4;
  int64 tagId = 5;
}

message blogInfo {
  int64 id = 1;
  string title = 2;
  string desc = 3;
  string author = 4;
  repeated Tags tags = 5;
  repeated Category category = 6;
  int64 createAt = 7;
  int64 updateAt = 8;
  string imgUrl = 9;
}

message GetBlogsResponse {
  repeated blogInfo blogs = 1;
  int64 total = 2;
}

message GetBlogByIdRequest {
  int64 id = 1;
}

message GetBlogByIdResponse {
  Blog blog = 1;
}

message DeleteBlogRequest {
  int64 id = 1;
}

message DeleteBlogResponse {
}

service BlogService {
  rpc GetAllTags(GetAllTagsRequest) returns (GetAllTagsResponse);
  rpc GetAllCategory(GetAllCategoryRequest) returns (GetAllCategoryResponse);
  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse);
  rpc DeleteTag(DeleteTagRequest) returns (DeleteTagResponse);
  rpc AddTag(AddTagRequest) returns (AddTagResponse);
  rpc AddCategory(AddCategoryRequest) returns (AddCategoryResponse);
  rpc AddBlog(AddBlogRequest) returns (AddBlogResponse);
  rpc GetOssToken(GetOssTokenRequest) returns (GetOssTokenResponse);
  rpc GetBlogs(GetBlogsRequest) returns (GetBlogsResponse);
  rpc GetBlogById(GetBlogByIdRequest) returns (GetBlogByIdResponse);
  rpc DeleteBlog(DeleteBlogRequest) returns (DeleteBlogResponse);
}